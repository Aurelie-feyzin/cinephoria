name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      SERVER_NAME: localhost
      TRUSTED_HOSTS: ^(localhost|cinephoria.dvp|192.168.1.48|php)$
      CI_CADDY_HOST_BLOCK: |
        http://localhost {
          import cinephoria
        }
    steps:
      -
        name: Debug SERVER_NAME
        run: echo $SERVER_NAME
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            php.cache-from=type=gha,scope=php-${{github.ref}}
            php.cache-from=type=gha,scope=php-refs/heads/main
            php.cache-to=type=gha,scope=php-${{github.ref}},mode=max
            pwa.cache-from=type=gha,scope=pwa-${{github.ref}}
            pwa.cache-from=type=gha,scope=pwa-refs/heads/main
            pwa.cache-to=type=gha,scope=pwa-${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose up --wait --no-build
      -
        name: PHP Quality
        run: make php-quality
      -
        name: PWA Quality
        run: make pwa-quality
      -
        name: Tauri Quality
        run: make tauri-quality
      -
        name: Expo Quality
        run: make expo-quality
      -
        name: PWA Build
        run: docker compose exec -T pwa pnpm build
      -
        name: Check API reachability
        run: curl -vk --fail-with-body http://localhost
      -
        name: Create test database
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      -
        name: Run migrations
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      -
       name: Set JWT keys for tests in container
       run: |
        docker compose exec -T php mkdir -p config/jwt
        echo "${{ secrets.JWT_PRIVATE_KEY }}" | docker compose exec -T php tee config/jwt/private-test.pem > /dev/null
        echo "${{ secrets.JWT_PUBLIC_KEY }}" | docker compose exec -T php tee config/jwt/public-test.pem > /dev/null
        docker compose exec -T php chmod 600 config/jwt/private-test.pem
        docker compose exec -T php chmod 644 config/jwt/public-test.pem
        docker compose exec -T php bash -c 'echo "JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE_TEST }}" > .env.test.local'
      -
        name: Run PHPUnit
        run: docker compose exec --workdir /app -T php bin/phpunit
      -
        name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
      -
        name: Check PWA reachability
        run: "curl -vk --fail-with-body -H 'Accept: text/html' http://localhost"
      -
        name: Security Checks - API
        run: make security-checker
        continue-on-error: true
      -
        name: Security Checks - PWA
        run: make pwa-audit
        continue-on-error: true
      -
        name: Security Checks - Tauri
        run: make tauri-audit
        continue-on-error: true
      -
        name: Security Checks - React Expo
        run: make expo-audit
        continue-on-error: true
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          recursive: true
